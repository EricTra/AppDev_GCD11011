// <auto-generated />
using Duybansachdao_Test.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Duybansachdao_Test.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Duybansachdao_Test.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            Author = "F. Scott Fitzgerald",
                            CategoryId = 6,
                            Description = "The Great Gatsby is a 1925 novel by American writer F. Scott Fitzgerald.",
                            Price = 10.99,
                            Title = "The Great Gatsby"
                        },
                        new
                        {
                            BookId = 2,
                            Author = "John Steinbeck",
                            CategoryId = 6,
                            Description = "The Grapes of Wrath is an American realist novel written by John Steinbeck and published in 1939.",
                            Price = 9.9900000000000002,
                            Title = "The Grapes of Wrath"
                        },
                        new
                        {
                            BookId = 3,
                            Author = "George Orwell",
                            CategoryId = 6,
                            Description = "Nineteen Eighty-Four: A Novel, often published as 1984, is a dystopian social science fiction novel by English novelist George Orwell.",
                            Price = 11.99,
                            Title = "Nineteen Eighty-Four"
                        });
                });

            modelBuilder.Entity("Duybansachdao_Test.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Description = "A man recuse the police",
                            DisplayOrder = 1,
                            Name = "Action"
                        },
                        new
                        {
                            CategoryId = 2,
                            Description = "A man recuse the police",
                            DisplayOrder = 2,
                            Name = "Romance"
                        },
                        new
                        {
                            CategoryId = 3,
                            Description = "A man recuse the police",
                            DisplayOrder = 3,
                            Name = "Historical"
                        },
                        new
                        {
                            CategoryId = 4,
                            Description = "A man recuse the police",
                            DisplayOrder = 4,
                            Name = "Drama"
                        },
                        new
                        {
                            CategoryId = 6,
                            Description = "A man recuse the police",
                            DisplayOrder = 5,
                            Name = "Science"
                        });
                });

            modelBuilder.Entity("Duybansachdao_Test.Models.Book", b =>
                {
                    b.HasOne("Duybansachdao_Test.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
